// Copyright 2017 https://tokenmarket.net - MIT licensed
//
// Run with Node 7.x as:
//
// node --harmony-async-await  deploy.js
//

let fs = require("fs");
let Web3 = require('web3'); // https://www.npmjs.com/package/web3
let list = require('./voterList');

// Create a web3 connection to a running geth node over JSON-RPC running at
// http://localhost:8545
// For geth VPS server + SSH tunneling see
// https://gist.github.com/miohtama/ce612b35415e74268ff243af645048f4
let web3 = new Web3();
web3.setProvider(new web3.providers.HttpProvider('http://localhost:7749'));

// Unlock the coinbase account to make transactions out of it
console.log("Unlocking coinbase account");
var password = "testing";
try {
  web3.personal.unlockAccount(web3.eth.coinbase, password);
} catch(e) {
  console.log(e);
  return;
}

/*
var _voters = ["0x526f62657274", "0x416e64726577", "0x5061747269636b", "0x436f6e6e6572", "0x436172736f6e", "0x4a617474", "0x4d6178", "0x4d6164646965", "0x4d617474", "0x4c61727279", "0x4861727279", "0x4a6f73657068", "0x4161726f6e", "0x466572676965", "0x4b656e647269636b", "0x4b616e7965", "0x4a61636b736f6e"]
var _bucket = ["0x435343", "0x435343", "0x435343", "0x435343", "0x435343", "0x435343", "0x435343", "0x435343", "0x435343", "0x435343", "0x43484d", "0x43484d", "0x43484d", "0x43484d", "0x43484d", "0x43484d", "0x43484d"]
var _candidates = ["0x4a65727279", "0x4665747479", "0x486f6c79", "0x4d6f6c79"];
var _candidateBucket = ["0x435343", "0x435343", "0x43484d", "0x43484d"];
*/

var electionContract = web3.eth.contract([{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"candidates","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"voterCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"closed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"voterData","outputs":[{"name":"voted","type":"bool"},{"name":"bucket","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"closeElection","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"candidateTable","outputs":[{"name":"name","type":"bytes32"},{"name":"bucket","type":"bytes32"},{"name":"votes","type":"uint32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"candidateCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"electionOfficial","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"voters","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"voter","type":"bytes32"},{"name":"candidate","type":"bytes32"}],"name":"vote","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"},{"name":"","type":"uint256"}],"name":"candidatesInBucket","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_voters","type":"bytes32[]"},{"name":"_bucket","type":"bytes32[]"},{"name":"_candidates","type":"bytes32[]"},{"name":"_candidateBucket","type":"bytes32[]"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]);
var election = electionContract.new(
   list.voters,
   list.voterBucket,
   list.candidates,
   list.candidateBuckets,
   {
     from: web3.eth.accounts[0], 
     data: '0x608060405234801561001057600080fd5b5060405161074d38038061074d8339810160409081528151602083015191830151606084015191840193928301929081019101600061004d610285565b6100556102a5565b8551875114158061006857508351855114155b1561007257610279565b6007805461010060a860020a0319163361010002179055865161009c9060039060208a01906102bc565b5084516100b09060049060208801906102bc565b5086516005558451600655600092505b84518310156101e85760606040519081016040528086858151811015156100e357fe5b90602001906020020151600019168152602001858581518110151561010457fe5b90602001906020020151600019168152602001600063ffffffff1681525091508160016000878681518110151561013757fe5b60209081029190910181015182528181019290925260409081016000908120845181559284015160018401559201516002918201805463ffffffff191663ffffffff909216919091179055855190919086908690811061019357fe5b6020908102909101810151825281019190915260400160002085518690859081106101ba57fe5b60209081029091018101518254600181810185556000948552929093209092019190915592909201916100c0565b600092505b8651831015610279576040805190810160405280600015158152602001878581518110151561021857fe5b9060200190602002015160001916815250905080600080898681518110151561023d57fe5b6020908102919091018101518252818101929092526040016000208251815460ff191690151517815591015160019182015592909201916101ed565b50505050505050610326565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b8280548282559060005260206000209081019282156102f9579160200282015b828111156102f957825182556020909201916001909101906102dc565b50610305929150610309565b5090565b61032391905b80821115610305576000815560010161030f565b90565b610418806103356000396000f3006080604052600436106100ae5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633477ee2e81146100b357806342169e48146100dd578063597e1fb5146100f25780636895a1f41461011b5780636c6c32d01461014e5780639bc5e14e14610163578063a9a981a31461019f578063ad39b7eb146101b4578063da58c7d9146101f2578063eeaaf19d1461020a578063fee3212514610225575b600080fd5b3480156100bf57600080fd5b506100cb600435610240565b60408051918252519081900360200190f35b3480156100e957600080fd5b506100cb61025f565b3480156100fe57600080fd5b50610107610265565b604080519115158252519081900360200190f35b34801561012757600080fd5b5061013360043561026e565b60408051921515835260208301919091528051918290030190f35b34801561015a57600080fd5b5061010761028d565b34801561016f57600080fd5b5061017b6004356102a2565b60408051938452602084019290925263ffffffff1682820152519081900360600190f35b3480156101ab57600080fd5b506100cb6102c8565b3480156101c057600080fd5b506101c96102ce565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156101fe57600080fd5b506100cb6004356102ef565b34801561021657600080fd5b506101076004356024356102fd565b34801561023157600080fd5b506100cb6004356024356103bc565b600480548290811061024e57fe5b600091825260209091200154905081565b60055481565b60075460ff1681565b6000602081905290815260409020805460019091015460ff9091169082565b6007805460ff19166001179081905560ff1690565b600160208190526000918252604090912080549181015460029091015463ffffffff1683565b60065481565b600754610100900473ffffffffffffffffffffffffffffffffffffffff1681565b600380548290811061024e57fe5b60075460009060ff168061031f575060008381526020819052604090205460ff165b806103395750600083815260208190526040902060010154155b15610346575060006103b6565b600082815260016020818152604080842083015487855291849052909220015414610373575060006103b6565b506000818152600160208181526040808420600201805463ffffffff80821686011663ffffffff1990911617905585845290839052909120805460ff1916821790555b92915050565b6002602052816000526040600020818154811015156103d757fe5b906000526020600020016000915091505054815600a165627a7a72305820215acc48f05fc0139efc239524ce5650628e83d4a5b7690b607d3746bd820f480029', 
     gas: '99999999'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
